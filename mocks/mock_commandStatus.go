// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jszumigaj/hart (interfaces: CommandStatus)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCommandStatus is a mock of CommandStatus interface.
type MockCommandStatus struct {
	ctrl     *gomock.Controller
	recorder *MockCommandStatusMockRecorder
}

// MockCommandStatusMockRecorder is the mock recorder for MockCommandStatus.
type MockCommandStatusMockRecorder struct {
	mock *MockCommandStatus
}

// NewMockCommandStatus creates a new mock instance.
func NewMockCommandStatus(ctrl *gomock.Controller) *MockCommandStatus {
	mock := &MockCommandStatus{ctrl: ctrl}
	mock.recorder = &MockCommandStatusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommandStatus) EXPECT() *MockCommandStatusMockRecorder {
	return m.recorder
}

// IsError mocks base method.
func (m *MockCommandStatus) IsError() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsError")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsError indicates an expected call of IsError.
func (mr *MockCommandStatusMockRecorder) IsError() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsError", reflect.TypeOf((*MockCommandStatus)(nil).IsError))
}

// IsWarning mocks base method.
func (m *MockCommandStatus) IsWarning() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsWarning")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsWarning indicates an expected call of IsWarning.
func (mr *MockCommandStatusMockRecorder) IsWarning() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsWarning", reflect.TypeOf((*MockCommandStatus)(nil).IsWarning))
}

// String mocks base method.
func (m *MockCommandStatus) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *MockCommandStatusMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockCommandStatus)(nil).String))
}
